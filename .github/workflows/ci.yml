name: CI Pipeline

on:
  pull_request:
    branches:
      - main
    paths:
      - '**.ts'
      - '**.tsx'
      - '**.js'
      - '**.jsx'
      - '**.json'
      - '**.html'
      - '.github/workflows/**'
  push:
    branches:
      - dev

jobs:
  lint:
    name: ${{ github.event_name == 'pull_request' && 'Linting' || 'lint' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Upload ESLint results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: eslint-results
          path: eslint-results/

  unit-tests:
    name: ${{ github.event_name == 'pull_request' && 'unit_tests' || 'Unit Tests' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm run test:unit

  coverage:
    name: ${{ github.event_name == 'pull_request' && 'code_coverage' || 'Coverage' }}
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Check test coverage
        run: npm run test:unit:coverage

      - name: Ensure 80% coverage
        run: |
          COVERAGE=$(npm run test:unit:coverage --silent | grep -A 1 'All files' | tail -n 1 | awk '{print $5}' | tr -d '%')
          COVERAGE=${COVERAGE%.*}
          if [ "$COVERAGE" -lt 80 ]; then
            echo "Test coverage is below 80%: $COVERAGE%"
            exit 1
          else
            echo "Test coverage: $COVERAGE%"
          fi

  e2e-tests:
    name: ${{ github.event_name == 'pull_request' && 'e2e_tests' || 'E2E Tests' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: |
          npm install
          npx playwright install

      - name: Run E2E tests
        run: npm run test:e2e

  build:
    name: ${{ github.event_name == 'pull_request' && 'build_app' || 'Build Application' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Run build
        run: npm run build

  ensure-all-tests-passed:
    name: Ensure All Checks Passed
    needs: [lint, unit-tests, coverage, e2e-tests, build]
    runs-on: ubuntu-latest

    steps:
      - name: Ensure all steps are successful
        run: echo "All tests passed!"

      - name: Prevent PR merge if tests or lint failed
        if: failure()
        run: exit 1
